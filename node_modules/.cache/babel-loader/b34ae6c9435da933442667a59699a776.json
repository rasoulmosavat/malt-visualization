{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _baseBuf = _interopRequireDefault(require(\"./base-buf\"));\n\nvar _node = require(\"../node\");\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Buffer that combines multiple buffers, exposing them as one single buffer.\n */\n\n\nvar CombinedBuffer = /*#__PURE__*/function (_BaseBuffer) {\n  (0, _inherits2[\"default\"])(CombinedBuffer, _BaseBuffer);\n\n  function CombinedBuffer(buffers) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CombinedBuffer);\n    var length = 0;\n\n    for (var i = 0; i < buffers.length; i++) {\n      length += buffers[i].length;\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(CombinedBuffer).call(this, length));\n    _this._buffers = buffers;\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CombinedBuffer, [{\n    key: \"getUInt8\",\n    value: function getUInt8(position) {\n      // Surely there's a faster way to do this.. some sort of lookup table thing?\n      for (var i = 0; i < this._buffers.length; i++) {\n        var buffer = this._buffers[i]; // If the position is not in the current buffer, skip the current buffer\n\n        if (position >= buffer.length) {\n          position -= buffer.length;\n        } else {\n          return buffer.getUInt8(position);\n        }\n      }\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(position) {\n      // Surely there's a faster way to do this.. some sort of lookup table thing?\n      for (var i = 0; i < this._buffers.length; i++) {\n        var buffer = this._buffers[i]; // If the position is not in the current buffer, skip the current buffer\n\n        if (position >= buffer.length) {\n          position -= buffer.length;\n        } else {\n          return buffer.getInt8(position);\n        }\n      }\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(position) {\n      // At some point, a more efficient impl. For now, we copy the 8 bytes\n      // we want to read and depend on the platform impl of IEEE 754.\n      var b = (0, _node.alloc)(8);\n\n      for (var i = 0; i < 8; i++) {\n        b.putUInt8(i, this.getUInt8(position + i));\n      }\n\n      return b.getFloat64(0);\n    }\n  }]);\n  return CombinedBuffer;\n}(_baseBuf[\"default\"]);\n\nexports[\"default\"] = CombinedBuffer;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/buf/combined-buf.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_baseBuf","_node","CombinedBuffer","_BaseBuffer","buffers","_this","length","i","call","_buffers","key","getUInt8","position","buffer","getInt8","getFloat64","b","alloc","putUInt8"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _baseBuf = _interopRequireDefault(require(\"./base-buf\"));\n\nvar _node = require(\"../node\");\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Buffer that combines multiple buffers, exposing them as one single buffer.\n */\nvar CombinedBuffer =\n/*#__PURE__*/\nfunction (_BaseBuffer) {\n  (0, _inherits2[\"default\"])(CombinedBuffer, _BaseBuffer);\n\n  function CombinedBuffer(buffers) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CombinedBuffer);\n    var length = 0;\n\n    for (var i = 0; i < buffers.length; i++) {\n      length += buffers[i].length;\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(CombinedBuffer).call(this, length));\n    _this._buffers = buffers;\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CombinedBuffer, [{\n    key: \"getUInt8\",\n    value: function getUInt8(position) {\n      // Surely there's a faster way to do this.. some sort of lookup table thing?\n      for (var i = 0; i < this._buffers.length; i++) {\n        var buffer = this._buffers[i]; // If the position is not in the current buffer, skip the current buffer\n\n        if (position >= buffer.length) {\n          position -= buffer.length;\n        } else {\n          return buffer.getUInt8(position);\n        }\n      }\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(position) {\n      // Surely there's a faster way to do this.. some sort of lookup table thing?\n      for (var i = 0; i < this._buffers.length; i++) {\n        var buffer = this._buffers[i]; // If the position is not in the current buffer, skip the current buffer\n\n        if (position >= buffer.length) {\n          position -= buffer.length;\n        } else {\n          return buffer.getInt8(position);\n        }\n      }\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(position) {\n      // At some point, a more efficient impl. For now, we copy the 8 bytes\n      // we want to read and depend on the platform impl of IEEE 754.\n      var b = (0, _node.alloc)(8);\n\n      for (var i = 0; i < 8; i++) {\n        b.putUInt8(i, this.getUInt8(position + i));\n      }\n\n      return b.getFloat64(0);\n    }\n  }]);\n  return CombinedBuffer;\n}(_baseBuf[\"default\"]);\n\nexports[\"default\"] = CombinedBuffer;"]},"metadata":{},"sourceType":"script"}