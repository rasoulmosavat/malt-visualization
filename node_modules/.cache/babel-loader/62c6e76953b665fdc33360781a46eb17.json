{"ast":null,"code":"var _jsxFileName = \"d:\\\\webback\\\\pro5\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport neo4j from 'neo4j-driver';\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst driver = neo4j.driver(\"bolt://195.134.90.158:7687\", neo4j.auth.basic('neo4j', 'RsJRkN4D'));\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  runFun() {\n    try {\n      let session = driver.session();\n      session.run(`MATCH (n:Student) RETURN n.firstname`).then(results => {\n        Math.round(Math.random() * 10);\n        let data1 = [];\n        results.records.forEach(record => {\n          data1.push({\n            name: record.get('n.firstname'),\n            uv: Math.round(Math.random() * 10),\n            pv: 2400,\n            amt: 2400\n          });\n        });\n        this.setState({\n          data: data1\n        });\n        console.log(this.state.data);\n        session.close();\n        driver.close();\n      }).catch(error => {\n        console.log('E2: ', error);\n      });\n    } catch (error) {\n      console.log('E1: ', error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          style: {\n            width: 200\n          },\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Neo4j....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: 200,\n            height: 50,\n            margin: 10\n          },\n          onClick: () => this.runFun(),\n          children: \" read data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              width: 500,\n              height: 300,\n              data: this.state.data,\n              children: [/*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                stroke: \"#ccc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(AreaChart, {\n              width: 500,\n              height: 300,\n              data: this.state.data,\n              margin: {\n                top: 10,\n                right: 30,\n                left: 0,\n                bottom: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Area, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: \"#8884d8\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["d:/webback/pro5/src/App.js"],"names":["neo4j","LineChart","Line","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","React","Component","driver","auth","basic","App","constructor","state","data","runFun","session","run","then","results","Math","round","random","data1","records","forEach","record","push","name","get","uv","pv","amt","setState","console","log","close","catch","error","render","logo","width","height","margin","top","right","left","bottom"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport neo4j from 'neo4j-driver'\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nimport React, { Component } from \"react\";\n\nconst driver = neo4j.driver(\"bolt://195.134.90.158:7687\", neo4j.auth.basic('neo4j', 'RsJRkN4D'))\n\nexport class App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n        data : []\n    }\n}\n\n\n  runFun(){\n  try {\n\n    let session = driver.session()\n\n    session\n    .run(`MATCH (n:Student) RETURN n.firstname`)\n    .then((results) => {\n      Math.round(Math.random() * 10)\n       \n        let data1=[]\n\n        results.records.forEach((record) => {\n            data1.push({name: record.get('n.firstname'), uv: Math.round(Math.random() * 10), pv: 2400, amt: 2400})            \n        })\n\n        this.setState({ data:data1 })\n\n        console.log(this.state.data)\n\n        session.close()\n        driver.close()\n    })\n    .catch((error) => {\n      console.log('E2: ',error)\n    })\n\n\n  } catch (error) {\n      console.log('E1: ',error)\n  }\n  \n}\n\n\n\n  render() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} style={{width:200}} alt=\"logo\" />\n        <p>\n            Neo4j....\n        </p>\n        <button style={{ width:200,height:50, margin:10}} onClick={()=>this.runFun()} > read data </button>\n      </header>\n      \n      <div>\n        <tr>\n          <td>\n        <LineChart width={500} height={300} data={this.state.data}>\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n        </LineChart>\n        </td>\n        <td>\n        <AreaChart\n          width={500}\n          height={300}\n          data={this.state.data}\n          margin={{\n            top: 10,\n            right: 30,\n            left: 0,\n            bottom: 0,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        </AreaChart>\n        </td>\n        </tr>\n      </div>\n      \n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}