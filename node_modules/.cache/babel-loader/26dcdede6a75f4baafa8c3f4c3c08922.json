{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _connectionChannel = _interopRequireDefault(require(\"./connection-channel\"));\n\nvar _pool = _interopRequireDefault(require(\"./pool\"));\n\nvar _poolConfig = _interopRequireDefault(require(\"./pool-config\"));\n\nvar _connectionErrorHandler = _interopRequireDefault(require(\"./connection-error-handler\"));\n\nvar _error = require(\"../error\");\n\nvar _connectionProvider = _interopRequireDefault(require(\"./connection-provider\"));\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar PooledConnectionProvider = /*#__PURE__*/function (_ConnectionProvider) {\n  (0, _inherits2[\"default\"])(PooledConnectionProvider, _ConnectionProvider);\n\n  function PooledConnectionProvider(_ref) {\n    var _this;\n\n    var id = _ref.id,\n        config = _ref.config,\n        log = _ref.log,\n        userAgent = _ref.userAgent,\n        authToken = _ref.authToken;\n    (0, _classCallCheck2[\"default\"])(this, PooledConnectionProvider);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(PooledConnectionProvider).call(this));\n    _this._id = id;\n    _this._config = config;\n    _this._log = log;\n    _this._userAgent = userAgent;\n    _this._authToken = authToken;\n    _this._connectionPool = new _pool[\"default\"]({\n      create: _this._createConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      destroy: _this._destroyConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      validate: _this._validateConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      installIdleObserver: PooledConnectionProvider._installIdleObserverOnConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      removeIdleObserver: PooledConnectionProvider._removeIdleObserverOnConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      config: _poolConfig[\"default\"].fromDriverConfig(config),\n      log: _this._log\n    });\n    _this._openConnections = {};\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(PooledConnectionProvider, [{\n    key: \"_createConnectionErrorHandler\",\n    value: function _createConnectionErrorHandler() {\n      return new _connectionErrorHandler[\"default\"](_error.SERVICE_UNAVAILABLE);\n    }\n    /**\n     * Create a new connection and initialize it.\n     * @return {Promise<Connection>} promise resolved with a new connection or rejected when failed to connect.\n     * @access private\n     */\n\n  }, {\n    key: \"_createConnection\",\n    value: function _createConnection(address, release) {\n      var _this2 = this;\n\n      var connection = _connectionChannel[\"default\"].create(address, this._config, this._createConnectionErrorHandler(), this._log);\n\n      connection._release = function () {\n        return release(address, connection);\n      };\n\n      this._openConnections[connection.id] = connection;\n      return connection.connect(this._userAgent, this._authToken)[\"catch\"](function (error) {\n        // let's destroy this connection\n        _this2._destroyConnection(connection); // propagate the error because connection failed to connect / initialize\n\n\n        throw error;\n      });\n    }\n    /**\n     * Check that a connection is usable\n     * @return {boolean} true if the connection is open\n     * @access private\n     **/\n\n  }, {\n    key: \"_validateConnection\",\n    value: function _validateConnection(conn) {\n      if (!conn.isOpen()) {\n        return false;\n      }\n\n      var maxConnectionLifetime = this._config.maxConnectionLifetime;\n      var lifetime = Date.now() - conn.creationTimestamp;\n      return lifetime <= maxConnectionLifetime;\n    }\n    /**\n     * Dispose of a connection.\n     * @return {Connection} the connection to dispose.\n     * @access private\n     */\n\n  }, {\n    key: \"_destroyConnection\",\n    value: function _destroyConnection(conn) {\n      delete this._openConnections[conn.id];\n      return conn.close();\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._connectionPool.close();\n\n              case 2:\n                _context.next = 4;\n                return Promise.all(Object.values(this._openConnections).map(function (c) {\n                  return c.close();\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }], [{\n    key: \"_installIdleObserverOnConnection\",\n    value: function _installIdleObserverOnConnection(conn, observer) {\n      conn._queueObserver(observer);\n    }\n  }, {\n    key: \"_removeIdleObserverOnConnection\",\n    value: function _removeIdleObserverOnConnection(conn) {\n      conn._updateCurrentObserver();\n    }\n  }]);\n  return PooledConnectionProvider;\n}(_connectionProvider[\"default\"]);\n\nexports[\"default\"] = PooledConnectionProvider;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/connection-provider-pooled.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_connectionChannel","_pool","_poolConfig","_connectionErrorHandler","_error","_connectionProvider","PooledConnectionProvider","_ConnectionProvider","_ref","_this","id","config","log","userAgent","authToken","call","_id","_config","_log","_userAgent","_authToken","_connectionPool","create","_createConnection","bind","destroy","_destroyConnection","validate","_validateConnection","installIdleObserver","_installIdleObserverOnConnection","removeIdleObserver","_removeIdleObserverOnConnection","fromDriverConfig","_openConnections","key","_createConnectionErrorHandler","SERVICE_UNAVAILABLE","address","release","_this2","connection","_release","connect","error","conn","isOpen","maxConnectionLifetime","lifetime","Date","now","creationTimestamp","close","_close","mark","_callee","wrap","_callee$","_context","prev","next","Promise","all","values","map","c","stop","apply","arguments","observer","_queueObserver","_updateCurrentObserver"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _connectionChannel = _interopRequireDefault(require(\"./connection-channel\"));\n\nvar _pool = _interopRequireDefault(require(\"./pool\"));\n\nvar _poolConfig = _interopRequireDefault(require(\"./pool-config\"));\n\nvar _connectionErrorHandler = _interopRequireDefault(require(\"./connection-error-handler\"));\n\nvar _error = require(\"../error\");\n\nvar _connectionProvider = _interopRequireDefault(require(\"./connection-provider\"));\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PooledConnectionProvider =\n/*#__PURE__*/\nfunction (_ConnectionProvider) {\n  (0, _inherits2[\"default\"])(PooledConnectionProvider, _ConnectionProvider);\n\n  function PooledConnectionProvider(_ref) {\n    var _this;\n\n    var id = _ref.id,\n        config = _ref.config,\n        log = _ref.log,\n        userAgent = _ref.userAgent,\n        authToken = _ref.authToken;\n    (0, _classCallCheck2[\"default\"])(this, PooledConnectionProvider);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(PooledConnectionProvider).call(this));\n    _this._id = id;\n    _this._config = config;\n    _this._log = log;\n    _this._userAgent = userAgent;\n    _this._authToken = authToken;\n    _this._connectionPool = new _pool[\"default\"]({\n      create: _this._createConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      destroy: _this._destroyConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      validate: _this._validateConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      installIdleObserver: PooledConnectionProvider._installIdleObserverOnConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      removeIdleObserver: PooledConnectionProvider._removeIdleObserverOnConnection.bind((0, _assertThisInitialized2[\"default\"])(_this)),\n      config: _poolConfig[\"default\"].fromDriverConfig(config),\n      log: _this._log\n    });\n    _this._openConnections = {};\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(PooledConnectionProvider, [{\n    key: \"_createConnectionErrorHandler\",\n    value: function _createConnectionErrorHandler() {\n      return new _connectionErrorHandler[\"default\"](_error.SERVICE_UNAVAILABLE);\n    }\n    /**\n     * Create a new connection and initialize it.\n     * @return {Promise<Connection>} promise resolved with a new connection or rejected when failed to connect.\n     * @access private\n     */\n\n  }, {\n    key: \"_createConnection\",\n    value: function _createConnection(address, release) {\n      var _this2 = this;\n\n      var connection = _connectionChannel[\"default\"].create(address, this._config, this._createConnectionErrorHandler(), this._log);\n\n      connection._release = function () {\n        return release(address, connection);\n      };\n\n      this._openConnections[connection.id] = connection;\n      return connection.connect(this._userAgent, this._authToken)[\"catch\"](function (error) {\n        // let's destroy this connection\n        _this2._destroyConnection(connection); // propagate the error because connection failed to connect / initialize\n\n\n        throw error;\n      });\n    }\n    /**\n     * Check that a connection is usable\n     * @return {boolean} true if the connection is open\n     * @access private\n     **/\n\n  }, {\n    key: \"_validateConnection\",\n    value: function _validateConnection(conn) {\n      if (!conn.isOpen()) {\n        return false;\n      }\n\n      var maxConnectionLifetime = this._config.maxConnectionLifetime;\n      var lifetime = Date.now() - conn.creationTimestamp;\n      return lifetime <= maxConnectionLifetime;\n    }\n    /**\n     * Dispose of a connection.\n     * @return {Connection} the connection to dispose.\n     * @access private\n     */\n\n  }, {\n    key: \"_destroyConnection\",\n    value: function _destroyConnection(conn) {\n      delete this._openConnections[conn.id];\n      return conn.close();\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._connectionPool.close();\n\n              case 2:\n                _context.next = 4;\n                return Promise.all(Object.values(this._openConnections).map(function (c) {\n                  return c.close();\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }], [{\n    key: \"_installIdleObserverOnConnection\",\n    value: function _installIdleObserverOnConnection(conn, observer) {\n      conn._queueObserver(observer);\n    }\n  }, {\n    key: \"_removeIdleObserverOnConnection\",\n    value: function _removeIdleObserverOnConnection(conn) {\n      conn._updateCurrentObserver();\n    }\n  }]);\n  return PooledConnectionProvider;\n}(_connectionProvider[\"default\"]);\n\nexports[\"default\"] = PooledConnectionProvider;"]},"metadata":{},"sourceType":"script"}