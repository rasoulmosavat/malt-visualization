{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _baseBuf = _interopRequireDefault(require(\"../buf/base-buf\"));\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar HeapBuffer = /*#__PURE__*/function (_BaseBuffer) {\n  (0, _inherits2[\"default\"])(HeapBuffer, _BaseBuffer);\n\n  function HeapBuffer(arg) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, HeapBuffer);\n    var buffer = arg instanceof ArrayBuffer ? arg : new ArrayBuffer(arg);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(HeapBuffer).call(this, buffer.byteLength));\n    _this._buffer = buffer;\n    _this._view = new DataView(_this._buffer);\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(HeapBuffer, [{\n    key: \"putUInt8\",\n    value: function putUInt8(position, val) {\n      this._view.setUint8(position, val);\n    }\n  }, {\n    key: \"getUInt8\",\n    value: function getUInt8(position) {\n      return this._view.getUint8(position);\n    }\n  }, {\n    key: \"putInt8\",\n    value: function putInt8(position, val) {\n      this._view.setInt8(position, val);\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(position) {\n      return this._view.getInt8(position);\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(position) {\n      return this._view.getFloat64(position);\n    }\n  }, {\n    key: \"putFloat64\",\n    value: function putFloat64(position, val) {\n      this._view.setFloat64(position, val);\n    }\n  }, {\n    key: \"getSlice\",\n    value: function getSlice(start, length) {\n      if (this._buffer.slice) {\n        return new HeapBuffer(this._buffer.slice(start, start + length));\n      } else {\n        // Some platforms (eg. phantomjs) don't support slice, so fall back to a copy\n        // We do this rather than return a SliceBuffer, because sliceBuffer cannot\n        // be passed to native network write ops etc - we need ArrayBuffer for that\n        var copy = new HeapBuffer(length);\n\n        for (var i = 0; i < length; i++) {\n          copy.putUInt8(i, this.getUInt8(i + start));\n        }\n\n        return copy;\n      }\n    }\n    /**\n     * Specific to HeapBuffer, this gets a DataView from the\n     * current position and of the specified length.\n     */\n\n  }, {\n    key: \"readView\",\n    value: function readView(length) {\n      return new DataView(this._buffer, this._updatePos(length), length);\n    }\n  }]);\n  return HeapBuffer;\n}(_baseBuf[\"default\"]);\n\nexports[\"default\"] = HeapBuffer;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/browser/browser-buf.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_baseBuf","HeapBuffer","_BaseBuffer","arg","_this","buffer","ArrayBuffer","call","byteLength","_buffer","_view","DataView","key","putUInt8","position","val","setUint8","getUInt8","getUint8","putInt8","setInt8","getInt8","getFloat64","putFloat64","setFloat64","getSlice","start","length","slice","copy","i","readView","_updatePos"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _baseBuf = _interopRequireDefault(require(\"../buf/base-buf\"));\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HeapBuffer =\n/*#__PURE__*/\nfunction (_BaseBuffer) {\n  (0, _inherits2[\"default\"])(HeapBuffer, _BaseBuffer);\n\n  function HeapBuffer(arg) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, HeapBuffer);\n    var buffer = arg instanceof ArrayBuffer ? arg : new ArrayBuffer(arg);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(HeapBuffer).call(this, buffer.byteLength));\n    _this._buffer = buffer;\n    _this._view = new DataView(_this._buffer);\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(HeapBuffer, [{\n    key: \"putUInt8\",\n    value: function putUInt8(position, val) {\n      this._view.setUint8(position, val);\n    }\n  }, {\n    key: \"getUInt8\",\n    value: function getUInt8(position) {\n      return this._view.getUint8(position);\n    }\n  }, {\n    key: \"putInt8\",\n    value: function putInt8(position, val) {\n      this._view.setInt8(position, val);\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(position) {\n      return this._view.getInt8(position);\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(position) {\n      return this._view.getFloat64(position);\n    }\n  }, {\n    key: \"putFloat64\",\n    value: function putFloat64(position, val) {\n      this._view.setFloat64(position, val);\n    }\n  }, {\n    key: \"getSlice\",\n    value: function getSlice(start, length) {\n      if (this._buffer.slice) {\n        return new HeapBuffer(this._buffer.slice(start, start + length));\n      } else {\n        // Some platforms (eg. phantomjs) don't support slice, so fall back to a copy\n        // We do this rather than return a SliceBuffer, because sliceBuffer cannot\n        // be passed to native network write ops etc - we need ArrayBuffer for that\n        var copy = new HeapBuffer(length);\n\n        for (var i = 0; i < length; i++) {\n          copy.putUInt8(i, this.getUInt8(i + start));\n        }\n\n        return copy;\n      }\n    }\n    /**\n     * Specific to HeapBuffer, this gets a DataView from the\n     * current position and of the specified length.\n     */\n\n  }, {\n    key: \"readView\",\n    value: function readView(length) {\n      return new DataView(this._buffer, this._updatePos(length), length);\n    }\n  }]);\n  return HeapBuffer;\n}(_baseBuf[\"default\"]);\n\nexports[\"default\"] = HeapBuffer;"]},"metadata":{},"sourceType":"script"}