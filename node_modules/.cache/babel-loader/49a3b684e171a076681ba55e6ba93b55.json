{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _boltProtocolV = _interopRequireDefault(require(\"./bolt-protocol-v2\"));\n\nvar _requestMessage = _interopRequireDefault(require(\"./request-message\"));\n\nvar _boltProtocolUtil = require(\"./bolt-protocol-util\");\n\nvar _streamObservers = require(\"./stream-observers\");\n\nvar _constants = require(\"./constants\");\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar noOpObserver = new _streamObservers.StreamObserver();\n\nvar BoltProtocol = /*#__PURE__*/function (_BoltProtocolV) {\n  (0, _inherits2[\"default\"])(BoltProtocol, _BoltProtocolV);\n\n  function BoltProtocol() {\n    (0, _classCallCheck2[\"default\"])(this, BoltProtocol);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(BoltProtocol).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(BoltProtocol, [{\n    key: \"transformMetadata\",\n    value: function transformMetadata(metadata) {\n      if ('t_first' in metadata) {\n        // Bolt V3 uses shorter key 't_first' to represent 'result_available_after'\n        // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\n        metadata.result_available_after = metadata.t_first;\n        delete metadata.t_first;\n      }\n\n      if ('t_last' in metadata) {\n        // Bolt V3 uses shorter key 't_last' to represent 'result_consumed_after'\n        // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\n        metadata.result_consumed_after = metadata.t_last;\n        delete metadata.t_last;\n      }\n\n      return metadata;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          userAgent = _ref.userAgent,\n          authToken = _ref.authToken,\n          onError = _ref.onError,\n          onComplete = _ref.onComplete;\n\n      var observer = new _streamObservers.LoginObserver({\n        connection: this._connection,\n        afterError: onError,\n        afterComplete: onComplete\n      });\n\n      this._connection.write(_requestMessage[\"default\"].hello(userAgent, authToken), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"prepareToClose\",\n    value: function prepareToClose() {\n      this._connection.write(_requestMessage[\"default\"].goodbye(), noOpObserver, true);\n    }\n  }, {\n    key: \"beginTransaction\",\n    value: function beginTransaction() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          bookmark = _ref2.bookmark,\n          txConfig = _ref2.txConfig,\n          database = _ref2.database,\n          mode = _ref2.mode,\n          beforeError = _ref2.beforeError,\n          afterError = _ref2.afterError,\n          beforeComplete = _ref2.beforeComplete,\n          afterComplete = _ref2.afterComplete;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      });\n      observer.prepareToHandleSingleResponse(); // passing in a database name on this protocol version throws an error\n\n      (0, _boltProtocolUtil.assertDatabaseIsEmpty)(database, this._connection, observer);\n\n      this._connection.write(_requestMessage[\"default\"].begin({\n        bookmark: bookmark,\n        txConfig: txConfig,\n        mode: mode\n      }), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"commitTransaction\",\n    value: function commitTransaction() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          beforeError = _ref3.beforeError,\n          afterError = _ref3.afterError,\n          beforeComplete = _ref3.beforeComplete,\n          afterComplete = _ref3.afterComplete;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      });\n      observer.prepareToHandleSingleResponse();\n\n      this._connection.write(_requestMessage[\"default\"].commit(), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"rollbackTransaction\",\n    value: function rollbackTransaction() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          beforeError = _ref4.beforeError,\n          afterError = _ref4.afterError,\n          beforeComplete = _ref4.beforeComplete,\n          afterComplete = _ref4.afterComplete;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      });\n      observer.prepareToHandleSingleResponse();\n\n      this._connection.write(_requestMessage[\"default\"].rollback(), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"run\",\n    value: function run(query, parameters) {\n      var _ref5 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          bookmark = _ref5.bookmark,\n          txConfig = _ref5.txConfig,\n          database = _ref5.database,\n          mode = _ref5.mode,\n          beforeKeys = _ref5.beforeKeys,\n          afterKeys = _ref5.afterKeys,\n          beforeError = _ref5.beforeError,\n          afterError = _ref5.afterError,\n          beforeComplete = _ref5.beforeComplete,\n          afterComplete = _ref5.afterComplete,\n          _ref5$flush = _ref5.flush,\n          flush = _ref5$flush === void 0 ? true : _ref5$flush;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeKeys: beforeKeys,\n        afterKeys: afterKeys,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      }); // passing in a database name on this protocol version throws an error\n\n      (0, _boltProtocolUtil.assertDatabaseIsEmpty)(database, this._connection, observer);\n\n      this._connection.write(_requestMessage[\"default\"].runWithMetadata(query, parameters, {\n        bookmark: bookmark,\n        txConfig: txConfig,\n        mode: mode\n      }), observer, false);\n\n      this._connection.write(_requestMessage[\"default\"].pullAll(), observer, flush);\n\n      return observer;\n    }\n  }, {\n    key: \"version\",\n    get: function get() {\n      return _constants.BOLT_PROTOCOL_V3;\n    }\n  }]);\n  return BoltProtocol;\n}(_boltProtocolV[\"default\"]);\n\nexports[\"default\"] = BoltProtocol;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/bolt-protocol-v3.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_boltProtocolV","_requestMessage","_boltProtocolUtil","_streamObservers","_constants","noOpObserver","StreamObserver","BoltProtocol","_BoltProtocolV","apply","arguments","key","transformMetadata","metadata","result_available_after","t_first","result_consumed_after","t_last","initialize","_ref","length","undefined","userAgent","authToken","onError","onComplete","observer","LoginObserver","connection","_connection","afterError","afterComplete","write","hello","prepareToClose","goodbye","beginTransaction","_ref2","bookmark","txConfig","database","mode","beforeError","beforeComplete","ResultStreamObserver","prepareToHandleSingleResponse","assertDatabaseIsEmpty","begin","commitTransaction","_ref3","commit","rollbackTransaction","_ref4","rollback","run","query","parameters","_ref5","beforeKeys","afterKeys","_ref5$flush","flush","runWithMetadata","pullAll","get","BOLT_PROTOCOL_V3"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _boltProtocolV = _interopRequireDefault(require(\"./bolt-protocol-v2\"));\n\nvar _requestMessage = _interopRequireDefault(require(\"./request-message\"));\n\nvar _boltProtocolUtil = require(\"./bolt-protocol-util\");\n\nvar _streamObservers = require(\"./stream-observers\");\n\nvar _constants = require(\"./constants\");\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noOpObserver = new _streamObservers.StreamObserver();\n\nvar BoltProtocol =\n/*#__PURE__*/\nfunction (_BoltProtocolV) {\n  (0, _inherits2[\"default\"])(BoltProtocol, _BoltProtocolV);\n\n  function BoltProtocol() {\n    (0, _classCallCheck2[\"default\"])(this, BoltProtocol);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(BoltProtocol).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(BoltProtocol, [{\n    key: \"transformMetadata\",\n    value: function transformMetadata(metadata) {\n      if ('t_first' in metadata) {\n        // Bolt V3 uses shorter key 't_first' to represent 'result_available_after'\n        // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\n        metadata.result_available_after = metadata.t_first;\n        delete metadata.t_first;\n      }\n\n      if ('t_last' in metadata) {\n        // Bolt V3 uses shorter key 't_last' to represent 'result_consumed_after'\n        // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\n        metadata.result_consumed_after = metadata.t_last;\n        delete metadata.t_last;\n      }\n\n      return metadata;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          userAgent = _ref.userAgent,\n          authToken = _ref.authToken,\n          onError = _ref.onError,\n          onComplete = _ref.onComplete;\n\n      var observer = new _streamObservers.LoginObserver({\n        connection: this._connection,\n        afterError: onError,\n        afterComplete: onComplete\n      });\n\n      this._connection.write(_requestMessage[\"default\"].hello(userAgent, authToken), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"prepareToClose\",\n    value: function prepareToClose() {\n      this._connection.write(_requestMessage[\"default\"].goodbye(), noOpObserver, true);\n    }\n  }, {\n    key: \"beginTransaction\",\n    value: function beginTransaction() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          bookmark = _ref2.bookmark,\n          txConfig = _ref2.txConfig,\n          database = _ref2.database,\n          mode = _ref2.mode,\n          beforeError = _ref2.beforeError,\n          afterError = _ref2.afterError,\n          beforeComplete = _ref2.beforeComplete,\n          afterComplete = _ref2.afterComplete;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      });\n      observer.prepareToHandleSingleResponse(); // passing in a database name on this protocol version throws an error\n\n      (0, _boltProtocolUtil.assertDatabaseIsEmpty)(database, this._connection, observer);\n\n      this._connection.write(_requestMessage[\"default\"].begin({\n        bookmark: bookmark,\n        txConfig: txConfig,\n        mode: mode\n      }), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"commitTransaction\",\n    value: function commitTransaction() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          beforeError = _ref3.beforeError,\n          afterError = _ref3.afterError,\n          beforeComplete = _ref3.beforeComplete,\n          afterComplete = _ref3.afterComplete;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      });\n      observer.prepareToHandleSingleResponse();\n\n      this._connection.write(_requestMessage[\"default\"].commit(), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"rollbackTransaction\",\n    value: function rollbackTransaction() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          beforeError = _ref4.beforeError,\n          afterError = _ref4.afterError,\n          beforeComplete = _ref4.beforeComplete,\n          afterComplete = _ref4.afterComplete;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      });\n      observer.prepareToHandleSingleResponse();\n\n      this._connection.write(_requestMessage[\"default\"].rollback(), observer, true);\n\n      return observer;\n    }\n  }, {\n    key: \"run\",\n    value: function run(query, parameters) {\n      var _ref5 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          bookmark = _ref5.bookmark,\n          txConfig = _ref5.txConfig,\n          database = _ref5.database,\n          mode = _ref5.mode,\n          beforeKeys = _ref5.beforeKeys,\n          afterKeys = _ref5.afterKeys,\n          beforeError = _ref5.beforeError,\n          afterError = _ref5.afterError,\n          beforeComplete = _ref5.beforeComplete,\n          afterComplete = _ref5.afterComplete,\n          _ref5$flush = _ref5.flush,\n          flush = _ref5$flush === void 0 ? true : _ref5$flush;\n\n      var observer = new _streamObservers.ResultStreamObserver({\n        connection: this._connection,\n        beforeKeys: beforeKeys,\n        afterKeys: afterKeys,\n        beforeError: beforeError,\n        afterError: afterError,\n        beforeComplete: beforeComplete,\n        afterComplete: afterComplete\n      }); // passing in a database name on this protocol version throws an error\n\n      (0, _boltProtocolUtil.assertDatabaseIsEmpty)(database, this._connection, observer);\n\n      this._connection.write(_requestMessage[\"default\"].runWithMetadata(query, parameters, {\n        bookmark: bookmark,\n        txConfig: txConfig,\n        mode: mode\n      }), observer, false);\n\n      this._connection.write(_requestMessage[\"default\"].pullAll(), observer, flush);\n\n      return observer;\n    }\n  }, {\n    key: \"version\",\n    get: function get() {\n      return _constants.BOLT_PROTOCOL_V3;\n    }\n  }]);\n  return BoltProtocol;\n}(_boltProtocolV[\"default\"]);\n\nexports[\"default\"] = BoltProtocol;"]},"metadata":{},"sourceType":"script"}