{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _serverAddress = _interopRequireDefault(require(\"../server-address\"));\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction resolveToSelf(address) {\n  return Promise.resolve([address]);\n}\n\nvar ConfiguredCustomResolver = /*#__PURE__*/function () {\n  function ConfiguredCustomResolver(resolverFunction) {\n    (0, _classCallCheck2[\"default\"])(this, ConfiguredCustomResolver);\n    this._resolverFunction = resolverFunction || resolveToSelf;\n  }\n\n  (0, _createClass2[\"default\"])(ConfiguredCustomResolver, [{\n    key: \"resolve\",\n    value: function resolve(seedRouter) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n      }).then(function (resolved) {\n        if (!Array.isArray(resolved)) {\n          throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' + \"Each address is '<host>:<port>'. Got: \".concat(resolved));\n        }\n\n        return resolved.map(function (r) {\n          return _serverAddress[\"default\"].fromUrl(r);\n        });\n      });\n    }\n  }]);\n  return ConfiguredCustomResolver;\n}();\n\nexports[\"default\"] = ConfiguredCustomResolver;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/resolver/configured-custom-resolver.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_serverAddress","resolveToSelf","address","Promise","resolve","ConfiguredCustomResolver","resolverFunction","_resolverFunction","key","seedRouter","_this","asHostPort","then","resolved","Array","isArray","TypeError","concat","map","r","fromUrl"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,gBAAgB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,oCAAD,CAAR,CAA1C;;AAEA,IAAIO,cAAc,GAAGR,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,SAAOC,OAAO,CAACC,OAAR,CAAgB,CAACF,OAAD,CAAhB,CAAP;AACD;;AAED,IAAIG,wBAAwB,GAC5B,aACA,YAAY;AACV,WAASA,wBAAT,CAAkCC,gBAAlC,EAAoD;AAClD,KAAC,GAAGR,gBAAgB,CAAC,SAAD,CAApB,EAAiC,IAAjC,EAAuCO,wBAAvC;AACA,SAAKE,iBAAL,GAAyBD,gBAAgB,IAAIL,aAA7C;AACD;;AAED,GAAC,GAAGF,aAAa,CAAC,SAAD,CAAjB,EAA8BM,wBAA9B,EAAwD,CAAC;AACvDG,IAAAA,GAAG,EAAE,SADkD;AAEvDX,IAAAA,KAAK,EAAE,SAASO,OAAT,CAAiBK,UAAjB,EAA6B;AAClC,UAAIC,KAAK,GAAG,IAAZ;;AAEA,aAAO,IAAIP,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC,eAAOA,OAAO,CAACM,KAAK,CAACH,iBAAN,CAAwBE,UAAU,CAACE,UAAX,EAAxB,CAAD,CAAd;AACD,OAFM,EAEJC,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,YAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAL,EAA8B;AAC5B,gBAAM,IAAIG,SAAJ,CAAc,8HAA8H,yCAAyCC,MAAzC,CAAgDJ,QAAhD,CAA5I,CAAN;AACD;;AAED,eAAOA,QAAQ,CAACK,GAAT,CAAa,UAAUC,CAAV,EAAa;AAC/B,iBAAOnB,cAAc,CAAC,SAAD,CAAd,CAA0BoB,OAA1B,CAAkCD,CAAlC,CAAP;AACD,SAFM,CAAP;AAGD,OAVM,CAAP;AAWD;AAhBsD,GAAD,CAAxD;AAkBA,SAAOd,wBAAP;AACD,CAzBD,EAFA;;AA6BAT,OAAO,CAAC,SAAD,CAAP,GAAqBS,wBAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _serverAddress = _interopRequireDefault(require(\"../server-address\"));\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction resolveToSelf(address) {\n  return Promise.resolve([address]);\n}\n\nvar ConfiguredCustomResolver =\n/*#__PURE__*/\nfunction () {\n  function ConfiguredCustomResolver(resolverFunction) {\n    (0, _classCallCheck2[\"default\"])(this, ConfiguredCustomResolver);\n    this._resolverFunction = resolverFunction || resolveToSelf;\n  }\n\n  (0, _createClass2[\"default\"])(ConfiguredCustomResolver, [{\n    key: \"resolve\",\n    value: function resolve(seedRouter) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n      }).then(function (resolved) {\n        if (!Array.isArray(resolved)) {\n          throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' + \"Each address is '<host>:<port>'. Got: \".concat(resolved));\n        }\n\n        return resolved.map(function (r) {\n          return _serverAddress[\"default\"].fromUrl(r);\n        });\n      });\n    }\n  }]);\n  return ConfiguredCustomResolver;\n}();\n\nexports[\"default\"] = ConfiguredCustomResolver;"]},"metadata":{},"sourceType":"script"}