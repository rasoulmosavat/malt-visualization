{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _connectionHolder = _interopRequireDefault(require(\"./connection-holder\"));\n\nvar _driver = require(\"../driver\");\n\nvar _streamObservers = require(\"./stream-observers\");\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Verifies connectivity using the given connection provider.\n */\n\n\nvar ConnectivityVerifier = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n   */\n  function ConnectivityVerifier(connectionProvider) {\n    (0, _classCallCheck2[\"default\"])(this, ConnectivityVerifier);\n    this._connectionProvider = connectionProvider;\n  }\n  /**\n   * Try to obtain a working connection from the connection provider.\n   * @returns {Promise<object>} promise resolved with server info or rejected with error.\n   */\n\n\n  (0, _createClass2[\"default\"])(ConnectivityVerifier, [{\n    key: \"verify\",\n    value: function verify() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$database = _ref.database,\n          database = _ref$database === void 0 ? '' : _ref$database;\n\n      return acquireAndReleaseDummyConnection(this._connectionProvider, database);\n    }\n  }]);\n  return ConnectivityVerifier;\n}();\n/**\n * @private\n * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n * @return {Promise<object>} promise resolved with server info or rejected with error.\n */\n\n\nexports[\"default\"] = ConnectivityVerifier;\n\nfunction acquireAndReleaseDummyConnection(connectionProvider, database) {\n  var connectionHolder = new _connectionHolder[\"default\"]({\n    mode: _driver.READ,\n    database: database,\n    connectionProvider: connectionProvider\n  });\n  connectionHolder.initializeConnection();\n  return connectionHolder.getConnection().then(function (connection) {\n    // able to establish a connection\n    return connectionHolder.close().then(function () {\n      return connection.server;\n    });\n  })[\"catch\"](function (error) {\n    // failed to establish a connection\n    return connectionHolder.close()[\"catch\"](function (ignoredError) {// ignore connection release error\n    }).then(function () {\n      return Promise.reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/connectivity-verifier.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_connectionHolder","_driver","_streamObservers","ConnectivityVerifier","connectionProvider","_connectionProvider","key","verify","_ref","arguments","length","undefined","_ref$database","database","acquireAndReleaseDummyConnection","connectionHolder","mode","READ","initializeConnection","getConnection","then","connection","close","server","error","ignoredError","Promise","reject"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,gBAAgB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,oCAAD,CAAR,CAA1C;;AAEA,IAAIO,iBAAiB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA9C;;AAEA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAIS,gBAAgB,GAAGT,OAAO,CAAC,oBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAIU,oBAAoB,GACxB,aACA,YAAY;AACV;AACF;AACA;AACA;AACE,WAASA,oBAAT,CAA8BC,kBAA9B,EAAkD;AAChD,KAAC,GAAGN,gBAAgB,CAAC,SAAD,CAApB,EAAiC,IAAjC,EAAuCK,oBAAvC;AACA,SAAKE,mBAAL,GAA2BD,kBAA3B;AACD;AACD;AACF;AACA;AACA;;;AAGE,GAAC,GAAGL,aAAa,CAAC,SAAD,CAAjB,EAA8BI,oBAA9B,EAAoD,CAAC;AACnDG,IAAAA,GAAG,EAAE,QAD8C;AAEnDT,IAAAA,KAAK,EAAE,SAASU,MAAT,GAAkB;AACvB,UAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,UACIG,aAAa,GAAGJ,IAAI,CAACK,QADzB;AAAA,UAEIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAF/C;;AAIA,aAAOE,gCAAgC,CAAC,KAAKT,mBAAN,EAA2BQ,QAA3B,CAAvC;AACD;AARkD,GAAD,CAApD;AAUA,SAAOV,oBAAP;AACD,CA1BD,EAFA;AA6BA;AACA;AACA;AACA;AACA;;;AAGAP,OAAO,CAAC,SAAD,CAAP,GAAqBO,oBAArB;;AAEA,SAASW,gCAAT,CAA0CV,kBAA1C,EAA8DS,QAA9D,EAAwE;AACtE,MAAIE,gBAAgB,GAAG,IAAIf,iBAAiB,CAAC,SAAD,CAArB,CAAiC;AACtDgB,IAAAA,IAAI,EAAEf,OAAO,CAACgB,IADwC;AAEtDJ,IAAAA,QAAQ,EAAEA,QAF4C;AAGtDT,IAAAA,kBAAkB,EAAEA;AAHkC,GAAjC,CAAvB;AAKAW,EAAAA,gBAAgB,CAACG,oBAAjB;AACA,SAAOH,gBAAgB,CAACI,aAAjB,GAAiCC,IAAjC,CAAsC,UAAUC,UAAV,EAAsB;AACjE;AACA,WAAON,gBAAgB,CAACO,KAAjB,GAAyBF,IAAzB,CAA8B,YAAY;AAC/C,aAAOC,UAAU,CAACE,MAAlB;AACD,KAFM,CAAP;AAGD,GALM,EAKJ,OALI,EAKK,UAAUC,KAAV,EAAiB;AAC3B;AACA,WAAOT,gBAAgB,CAACO,KAAjB,GAAyB,OAAzB,EAAkC,UAAUG,YAAV,EAAwB,CAAC;AACjE,KADM,EACJL,IADI,CACC,YAAY;AAClB,aAAOM,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,KAHM,CAAP;AAID,GAXM,CAAP;AAYD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _connectionHolder = _interopRequireDefault(require(\"./connection-holder\"));\n\nvar _driver = require(\"../driver\");\n\nvar _streamObservers = require(\"./stream-observers\");\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Verifies connectivity using the given connection provider.\n */\nvar ConnectivityVerifier =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n   */\n  function ConnectivityVerifier(connectionProvider) {\n    (0, _classCallCheck2[\"default\"])(this, ConnectivityVerifier);\n    this._connectionProvider = connectionProvider;\n  }\n  /**\n   * Try to obtain a working connection from the connection provider.\n   * @returns {Promise<object>} promise resolved with server info or rejected with error.\n   */\n\n\n  (0, _createClass2[\"default\"])(ConnectivityVerifier, [{\n    key: \"verify\",\n    value: function verify() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$database = _ref.database,\n          database = _ref$database === void 0 ? '' : _ref$database;\n\n      return acquireAndReleaseDummyConnection(this._connectionProvider, database);\n    }\n  }]);\n  return ConnectivityVerifier;\n}();\n/**\n * @private\n * @param {ConnectionProvider} connectionProvider the provider to obtain connections from.\n * @return {Promise<object>} promise resolved with server info or rejected with error.\n */\n\n\nexports[\"default\"] = ConnectivityVerifier;\n\nfunction acquireAndReleaseDummyConnection(connectionProvider, database) {\n  var connectionHolder = new _connectionHolder[\"default\"]({\n    mode: _driver.READ,\n    database: database,\n    connectionProvider: connectionProvider\n  });\n  connectionHolder.initializeConnection();\n  return connectionHolder.getConnection().then(function (connection) {\n    // able to establish a connection\n    return connectionHolder.close().then(function () {\n      return connection.server;\n    });\n  })[\"catch\"](function (error) {\n    // failed to establish a connection\n    return connectionHolder.close()[\"catch\"](function (ignoredError) {// ignore connection release error\n    }).then(function () {\n      return Promise.reject(error);\n    });\n  });\n}"]},"metadata":{},"sourceType":"script"}