{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newError = newError;\nexports.PROTOCOL_ERROR = exports.SESSION_EXPIRED = exports.SERVICE_UNAVAILABLE = exports.Neo4jError = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// A common place for constructing error objects, to keep them\n// uniform across the driver surface.\n\n/**\n * Error code representing complete loss of service. Used by {@link Neo4jError#code}.\n * @type {string}\n */\n\n\nvar SERVICE_UNAVAILABLE = 'ServiceUnavailable';\n/**\n * Error code representing transient loss of service. Used by {@link Neo4jError#code}.\n * @type {string}\n */\n\nexports.SERVICE_UNAVAILABLE = SERVICE_UNAVAILABLE;\nvar SESSION_EXPIRED = 'SessionExpired';\n/**\n * Error code representing serialization/deserialization issue in the Bolt protocol. Used by {@link Neo4jError#code}.\n * @type {string}\n */\n\nexports.SESSION_EXPIRED = SESSION_EXPIRED;\nvar PROTOCOL_ERROR = 'ProtocolError';\n/**\n * Create a new error from a message and error code\n * @param message the error message\n * @param code the error code\n * @return {Neo4jError} an {@link Neo4jError}\n * @private\n */\n\nexports.PROTOCOL_ERROR = PROTOCOL_ERROR;\n\nfunction newError(message) {\n  var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'N/A'; // TODO: Idea is that we can check the code here and throw sub-classes\n  // of Neo4jError as appropriate\n\n  return new Neo4jError(message, code);\n}\n/**\n * Class for all errors thrown/returned by the driver.\n */\n\n\nvar Neo4jError = /*#__PURE__*/function (_Error) {\n  (0, _inherits2[\"default\"])(Neo4jError, _Error);\n  /**\n   * @constructor\n   * @param {string} message - The error message.\n   * @param {string} code - Optional error code. Will be populated when error originates in the database.\n   */\n\n  function Neo4jError(message) {\n    var _this;\n\n    var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'N/A';\n    (0, _classCallCheck2[\"default\"])(this, Neo4jError);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Neo4jError).call(this, message));\n    /**\n     * The error message\n     * @type {string}\n     */\n\n    _this.message = message;\n    /**\n     * Optional error code. Will be populated when error originates in the database.\n     * @type {string}\n     */\n\n    _this.code = code;\n    /**\n     * The name of the error.\n     * @type {string}\n     */\n\n    _this.name = 'Neo4jError';\n    return _this;\n  }\n\n  return Neo4jError;\n}((0, _wrapNativeSuper2[\"default\"])(Error));\n\nexports.Neo4jError = Neo4jError;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/error.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","newError","PROTOCOL_ERROR","SESSION_EXPIRED","SERVICE_UNAVAILABLE","Neo4jError","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_wrapNativeSuper2","message","code","arguments","length","undefined","_Error","_this","call","name","Error"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newError = newError;\nexports.PROTOCOL_ERROR = exports.SESSION_EXPIRED = exports.SERVICE_UNAVAILABLE = exports.Neo4jError = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// A common place for constructing error objects, to keep them\n// uniform across the driver surface.\n\n/**\n * Error code representing complete loss of service. Used by {@link Neo4jError#code}.\n * @type {string}\n */\nvar SERVICE_UNAVAILABLE = 'ServiceUnavailable';\n/**\n * Error code representing transient loss of service. Used by {@link Neo4jError#code}.\n * @type {string}\n */\n\nexports.SERVICE_UNAVAILABLE = SERVICE_UNAVAILABLE;\nvar SESSION_EXPIRED = 'SessionExpired';\n/**\n * Error code representing serialization/deserialization issue in the Bolt protocol. Used by {@link Neo4jError#code}.\n * @type {string}\n */\n\nexports.SESSION_EXPIRED = SESSION_EXPIRED;\nvar PROTOCOL_ERROR = 'ProtocolError';\n/**\n * Create a new error from a message and error code\n * @param message the error message\n * @param code the error code\n * @return {Neo4jError} an {@link Neo4jError}\n * @private\n */\n\nexports.PROTOCOL_ERROR = PROTOCOL_ERROR;\n\nfunction newError(message) {\n  var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'N/A';\n  // TODO: Idea is that we can check the code here and throw sub-classes\n  // of Neo4jError as appropriate\n  return new Neo4jError(message, code);\n}\n/**\n * Class for all errors thrown/returned by the driver.\n */\n\n\nvar Neo4jError =\n/*#__PURE__*/\nfunction (_Error) {\n  (0, _inherits2[\"default\"])(Neo4jError, _Error);\n\n  /**\n   * @constructor\n   * @param {string} message - The error message.\n   * @param {string} code - Optional error code. Will be populated when error originates in the database.\n   */\n  function Neo4jError(message) {\n    var _this;\n\n    var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'N/A';\n    (0, _classCallCheck2[\"default\"])(this, Neo4jError);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Neo4jError).call(this, message));\n    /**\n     * The error message\n     * @type {string}\n     */\n\n    _this.message = message;\n    /**\n     * Optional error code. Will be populated when error originates in the database.\n     * @type {string}\n     */\n\n    _this.code = code;\n    /**\n     * The name of the error.\n     * @type {string}\n     */\n\n    _this.name = 'Neo4jError';\n    return _this;\n  }\n\n  return Neo4jError;\n}((0, _wrapNativeSuper2[\"default\"])(Error));\n\nexports.Neo4jError = Neo4jError;"]},"metadata":{},"sourceType":"script"}