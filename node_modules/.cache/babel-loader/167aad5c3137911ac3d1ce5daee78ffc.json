{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _integer = require(\"../integer\");\n\nvar _driver = require(\"../driver\");\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar MIN_ROUTERS = 1;\n\nvar RoutingTable = /*#__PURE__*/function () {\n  function RoutingTable() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        database = _ref.database,\n        routers = _ref.routers,\n        readers = _ref.readers,\n        writers = _ref.writers,\n        expirationTime = _ref.expirationTime;\n\n    (0, _classCallCheck2[\"default\"])(this, RoutingTable);\n    this.database = database;\n    this.databaseName = database || 'default database';\n    this.routers = routers || [];\n    this.readers = readers || [];\n    this.writers = writers || [];\n    this.expirationTime = expirationTime || (0, _integer[\"int\"])(0);\n  }\n\n  (0, _createClass2[\"default\"])(RoutingTable, [{\n    key: \"forget\",\n    value: function forget(address) {\n      // Don't remove it from the set of routers, since that might mean we lose our ability to re-discover,\n      // just remove it from the set of readers and writers, so that we don't use it for actual work without\n      // performing discovery first.\n      this.readers = removeFromArray(this.readers, address);\n      this.writers = removeFromArray(this.writers, address);\n    }\n  }, {\n    key: \"forgetRouter\",\n    value: function forgetRouter(address) {\n      this.routers = removeFromArray(this.routers, address);\n    }\n  }, {\n    key: \"forgetWriter\",\n    value: function forgetWriter(address) {\n      this.writers = removeFromArray(this.writers, address);\n    }\n    /**\n     * Check if this routing table is fresh to perform the required operation.\n     * @param {string} accessMode the type of operation. Allowed values are {@link READ} and {@link WRITE}.\n     * @return {boolean} `true` when this table contains servers to serve the required operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isStaleFor\",\n    value: function isStaleFor(accessMode) {\n      return this.expirationTime.lessThan(Date.now()) || this.routers.length < MIN_ROUTERS || accessMode === _driver.READ && this.readers.length === 0 || accessMode === _driver.WRITE && this.writers.length === 0;\n    }\n    /**\n     * Check if this routing table is expired for specified amount of duration\n     *\n     * @param {Integer} duration amount of duration in milliseconds to check for expiration\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isExpiredFor\",\n    value: function isExpiredFor(duration) {\n      return this.expirationTime.add(duration).lessThan(Date.now());\n    }\n  }, {\n    key: \"allServers\",\n    value: function allServers() {\n      return [].concat((0, _toConsumableArray2[\"default\"])(this.routers), (0, _toConsumableArray2[\"default\"])(this.readers), (0, _toConsumableArray2[\"default\"])(this.writers));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'RoutingTable[' + \"database=\".concat(this.databaseName, \", \") + \"expirationTime=\".concat(this.expirationTime, \", \") + \"currentTime=\".concat(Date.now(), \", \") + \"routers=[\".concat(this.routers, \"], \") + \"readers=[\".concat(this.readers, \"], \") + \"writers=[\".concat(this.writers, \"]]\");\n    }\n  }]);\n  return RoutingTable;\n}();\n/**\n * Remove all occurrences of the element in the array.\n * @param {Array} array the array to filter.\n * @param {Object} element the element to remove.\n * @return {Array} new filtered array.\n */\n\n\nexports[\"default\"] = RoutingTable;\n\nfunction removeFromArray(array, element) {\n  return array.filter(function (item) {\n    return item.asKey() !== element.asKey();\n  });\n}","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/internal/routing-table.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_toConsumableArray2","_classCallCheck2","_createClass2","_integer","_driver","MIN_ROUTERS","RoutingTable","_ref","arguments","length","undefined","database","routers","readers","writers","expirationTime","databaseName","key","forget","address","removeFromArray","forgetRouter","forgetWriter","isStaleFor","accessMode","lessThan","Date","now","READ","WRITE","isExpiredFor","duration","add","allServers","concat","toString","array","element","filter","item","asKey"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _integer = require(\"../integer\");\n\nvar _driver = require(\"../driver\");\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MIN_ROUTERS = 1;\n\nvar RoutingTable =\n/*#__PURE__*/\nfunction () {\n  function RoutingTable() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        database = _ref.database,\n        routers = _ref.routers,\n        readers = _ref.readers,\n        writers = _ref.writers,\n        expirationTime = _ref.expirationTime;\n\n    (0, _classCallCheck2[\"default\"])(this, RoutingTable);\n    this.database = database;\n    this.databaseName = database || 'default database';\n    this.routers = routers || [];\n    this.readers = readers || [];\n    this.writers = writers || [];\n    this.expirationTime = expirationTime || (0, _integer[\"int\"])(0);\n  }\n\n  (0, _createClass2[\"default\"])(RoutingTable, [{\n    key: \"forget\",\n    value: function forget(address) {\n      // Don't remove it from the set of routers, since that might mean we lose our ability to re-discover,\n      // just remove it from the set of readers and writers, so that we don't use it for actual work without\n      // performing discovery first.\n      this.readers = removeFromArray(this.readers, address);\n      this.writers = removeFromArray(this.writers, address);\n    }\n  }, {\n    key: \"forgetRouter\",\n    value: function forgetRouter(address) {\n      this.routers = removeFromArray(this.routers, address);\n    }\n  }, {\n    key: \"forgetWriter\",\n    value: function forgetWriter(address) {\n      this.writers = removeFromArray(this.writers, address);\n    }\n    /**\n     * Check if this routing table is fresh to perform the required operation.\n     * @param {string} accessMode the type of operation. Allowed values are {@link READ} and {@link WRITE}.\n     * @return {boolean} `true` when this table contains servers to serve the required operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isStaleFor\",\n    value: function isStaleFor(accessMode) {\n      return this.expirationTime.lessThan(Date.now()) || this.routers.length < MIN_ROUTERS || accessMode === _driver.READ && this.readers.length === 0 || accessMode === _driver.WRITE && this.writers.length === 0;\n    }\n    /**\n     * Check if this routing table is expired for specified amount of duration\n     *\n     * @param {Integer} duration amount of duration in milliseconds to check for expiration\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isExpiredFor\",\n    value: function isExpiredFor(duration) {\n      return this.expirationTime.add(duration).lessThan(Date.now());\n    }\n  }, {\n    key: \"allServers\",\n    value: function allServers() {\n      return [].concat((0, _toConsumableArray2[\"default\"])(this.routers), (0, _toConsumableArray2[\"default\"])(this.readers), (0, _toConsumableArray2[\"default\"])(this.writers));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'RoutingTable[' + \"database=\".concat(this.databaseName, \", \") + \"expirationTime=\".concat(this.expirationTime, \", \") + \"currentTime=\".concat(Date.now(), \", \") + \"routers=[\".concat(this.routers, \"], \") + \"readers=[\".concat(this.readers, \"], \") + \"writers=[\".concat(this.writers, \"]]\");\n    }\n  }]);\n  return RoutingTable;\n}();\n/**\n * Remove all occurrences of the element in the array.\n * @param {Array} array the array to filter.\n * @param {Object} element the element to remove.\n * @return {Array} new filtered array.\n */\n\n\nexports[\"default\"] = RoutingTable;\n\nfunction removeFromArray(array, element) {\n  return array.filter(function (item) {\n    return item.asKey() !== element.asKey();\n  });\n}"]},"metadata":{},"sourceType":"script"}