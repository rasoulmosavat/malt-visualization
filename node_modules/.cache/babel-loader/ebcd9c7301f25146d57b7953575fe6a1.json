{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _error = require(\"./error\");\n\nvar _resultSummary = _interopRequireDefault(require(\"./result-summary\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _record = _interopRequireDefault(require(\"./record\"));\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar States = {\n  READY: 0,\n  STREAMING: 1,\n  COMPLETED: 2\n  /**\n   * The reactive result interface.\n   */\n\n};\n\nvar RxResult = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n   */\n  function RxResult(result) {\n    (0, _classCallCheck2[\"default\"])(this, RxResult);\n    var replayedResult = result.pipe((0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._result = replayedResult;\n    this._keys = replayedResult.pipe((0, _operators.flatMap)(function (r) {\n      return (0, _rxjs.from)(r.keys());\n    }), (0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._records = new _rxjs.Subject();\n    this._summary = new _rxjs.ReplaySubject();\n    this._state = States.READY;\n  }\n  /**\n   * Returns an observable that exposes a single item containing field names\n   * returned by the executing query.\n   *\n   * Errors raised by actual query execution can surface on the returned\n   * observable stream.\n   *\n   * @public\n   * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n   */\n\n\n  (0, _createClass2[\"default\"])(RxResult, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n\n  }, {\n    key: \"records\",\n    value: function records() {\n      var _this = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (recordsObserver) {\n          return _this._startStreaming({\n            result: result,\n            recordsObserver: recordsObserver\n          });\n        });\n      }));\n    }\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var _this2 = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (summaryObserver) {\n          return _this2._startStreaming({\n            result: result,\n            summaryObserver: summaryObserver\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"_startStreaming\",\n    value: function _startStreaming() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          result = _ref.result,\n          _ref$recordsObserver = _ref.recordsObserver,\n          recordsObserver = _ref$recordsObserver === void 0 ? null : _ref$recordsObserver,\n          _ref$summaryObserver = _ref.summaryObserver,\n          summaryObserver = _ref$summaryObserver === void 0 ? null : _ref$summaryObserver;\n\n      var subscriptions = [];\n\n      if (summaryObserver) {\n        subscriptions.push(this._summary.subscribe(summaryObserver));\n      }\n\n      if (this._state < States.STREAMING) {\n        this._state = States.STREAMING;\n\n        if (recordsObserver) {\n          subscriptions.push(this._records.subscribe(recordsObserver));\n        }\n\n        subscriptions.push({\n          unsubscribe: function unsubscribe() {\n            if (result._cancel) {\n              result._cancel();\n            }\n          }\n        });\n\n        if (this._records.observers.length === 0) {\n          result._cancel();\n        }\n\n        result.subscribe({\n          onNext: function onNext(record) {\n            _this3._records.next(record);\n          },\n          onCompleted: function onCompleted(summary) {\n            _this3._records.complete();\n\n            _this3._summary.next(summary);\n\n            _this3._summary.complete();\n\n            _this3._state = States.COMPLETED;\n          },\n          onError: function onError(err) {\n            _this3._records.error(err);\n\n            _this3._summary.error(err);\n\n            _this3._state = States.COMPLETED;\n          }\n        });\n      } else if (recordsObserver) {\n        recordsObserver.error((0, _error.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n      };\n    }\n  }]);\n  return RxResult;\n}();\n\nexports[\"default\"] = RxResult;","map":{"version":3,"sources":["d:/webback/pro5/node_modules/neo4j-driver/lib/result-rx.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_error","_resultSummary","_rxjs","_operators","_record","States","READY","STREAMING","COMPLETED","RxResult","result","replayedResult","pipe","publishReplay","refCount","_result","_keys","flatMap","r","from","keys","_records","Subject","_summary","ReplaySubject","_state","key","records","_this","Observable","recordsObserver","_startStreaming","consume","_this2","summaryObserver","_this3","_ref","arguments","length","undefined","_ref$recordsObserver","_ref$summaryObserver","subscriptions","push","subscribe","unsubscribe","_cancel","observers","onNext","record","next","onCompleted","summary","complete","onError","err","error","newError","forEach","s"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _error = require(\"./error\");\n\nvar _resultSummary = _interopRequireDefault(require(\"./result-summary\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _record = _interopRequireDefault(require(\"./record\"));\n\n/**\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar States = {\n  READY: 0,\n  STREAMING: 1,\n  COMPLETED: 2\n  /**\n   * The reactive result interface.\n   */\n\n};\n\nvar RxResult =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n   */\n  function RxResult(result) {\n    (0, _classCallCheck2[\"default\"])(this, RxResult);\n    var replayedResult = result.pipe((0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._result = replayedResult;\n    this._keys = replayedResult.pipe((0, _operators.flatMap)(function (r) {\n      return (0, _rxjs.from)(r.keys());\n    }), (0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._records = new _rxjs.Subject();\n    this._summary = new _rxjs.ReplaySubject();\n    this._state = States.READY;\n  }\n  /**\n   * Returns an observable that exposes a single item containing field names\n   * returned by the executing query.\n   *\n   * Errors raised by actual query execution can surface on the returned\n   * observable stream.\n   *\n   * @public\n   * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n   */\n\n\n  (0, _createClass2[\"default\"])(RxResult, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n\n  }, {\n    key: \"records\",\n    value: function records() {\n      var _this = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (recordsObserver) {\n          return _this._startStreaming({\n            result: result,\n            recordsObserver: recordsObserver\n          });\n        });\n      }));\n    }\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var _this2 = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (summaryObserver) {\n          return _this2._startStreaming({\n            result: result,\n            summaryObserver: summaryObserver\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"_startStreaming\",\n    value: function _startStreaming() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          result = _ref.result,\n          _ref$recordsObserver = _ref.recordsObserver,\n          recordsObserver = _ref$recordsObserver === void 0 ? null : _ref$recordsObserver,\n          _ref$summaryObserver = _ref.summaryObserver,\n          summaryObserver = _ref$summaryObserver === void 0 ? null : _ref$summaryObserver;\n\n      var subscriptions = [];\n\n      if (summaryObserver) {\n        subscriptions.push(this._summary.subscribe(summaryObserver));\n      }\n\n      if (this._state < States.STREAMING) {\n        this._state = States.STREAMING;\n\n        if (recordsObserver) {\n          subscriptions.push(this._records.subscribe(recordsObserver));\n        }\n\n        subscriptions.push({\n          unsubscribe: function unsubscribe() {\n            if (result._cancel) {\n              result._cancel();\n            }\n          }\n        });\n\n        if (this._records.observers.length === 0) {\n          result._cancel();\n        }\n\n        result.subscribe({\n          onNext: function onNext(record) {\n            _this3._records.next(record);\n          },\n          onCompleted: function onCompleted(summary) {\n            _this3._records.complete();\n\n            _this3._summary.next(summary);\n\n            _this3._summary.complete();\n\n            _this3._state = States.COMPLETED;\n          },\n          onError: function onError(err) {\n            _this3._records.error(err);\n\n            _this3._summary.error(err);\n\n            _this3._state = States.COMPLETED;\n          }\n        });\n      } else if (recordsObserver) {\n        recordsObserver.error((0, _error.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n      };\n    }\n  }]);\n  return RxResult;\n}();\n\nexports[\"default\"] = RxResult;"]},"metadata":{},"sourceType":"script"}